open Misc
open Qpa

(**** Back-Pressure LTTA ****)

(* Controllers *)
let node bp_controller (i, ra, om, mi) = (o, a, im) where
  rec m = mem(om, mi)
  and automaton
      | Wait ->
          do (* skip *)
          unless all_inputs_fresh then
            do emit im = data(i) and emit a = 4012 in Ready
      | Ready ->
          do (* skip *)
          unless all_acks_fresh then
            do emit o = m in Wait

  and all_inputs_fresh = fresh(i, im, true)
  and all_acks_fresh = fresh(ra, o, false)


(** A small example **)

let node machine1 (i) = n where
  rec n = 0 -> (i+2)

let node machine2 (i) = m where
  rec m = 1 -> (i+2)

let node m1(i,ra) = o,a where
  rec (o, a, im) = bp_controller(i, ra, om, -1)
  and present im(v) -> do emit om = machine1(v) done

let node m2(i,ra) = o,a where
  rec (o, a, im) = bp_controller(i, ra, om, -1)
  and present im(v) -> do emit om = machine2(v) done

(* Pluging two nodes with links to form an example *)
let node example_bp (c1, dc1, c2, dc2) = (n, m) where
  rec present c1() -> do n,an = m1(l2,l2a) done
  and present c2() -> do m,am = m2(l1,l1a) done
  and l1 = ltta_link(c1, dc1, n, -1)
  and l1a = ltta_link(c1, dc1, an, 4012)
  and l2 = ltta_link(c2, dc2, m, -1)
  and l2a = ltta_link(c2, dc2, am, 4012)


(** Simulation **)

let node print(n,m) = o where
  rec init o1 = () and init o2 = ()
  and present n(v) -> do o1 = print1(v) done
  and present m(v) -> do o2 = print2(v) done
  and o = dummy (o1, o2)


let hybrid main () =
  (* Architecture constraints *)
  let c1 = metro(t_min, t_max) in
  let dc1 = delay(c1, tau_min, tau_max) in
  let c2 = metro(t_min, t_max) in
  let dc2 = delay(c2, tau_min, tau_max) in

  (* Global clock *)
  let g =  present c1() | dc1() | c2() | dc2() -> () in

  present g() ->
    let (n, m) = example_bp(c1, dc1, c2, dc2) in
    print(n,m)
  else ()
